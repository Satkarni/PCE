C51 COMPILER V8.09   MAIN                                                                  08/05/2016 11:09:05 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          
   3          #include<ADuC845.h>             
   4          #include<stdio.h>
   5          #include "config.h"
   6          
   7          unsigned long ADC=0;                                            // raw ADC conversion result
   8          unsigned long ADC_MAX = ADC_MAX_INIT;
   9          
  10          unsigned long DAC_val=0;
  11          int i=0; 
  12          int state = 0;
  13          void Delay(int loop){
  14   1          int j;
  15   1          int i;
  16   1          for(i=0;i<loop;i++)
  17   1          {
  18   2              for(j=0;j<133;j++)
  19   2              {
  20   3              }
  21   2          }
  22   1      }
  23          
  24          
  25          void ee_init(){
  26   1      
  27   1                      EADRL = EE_PAGE_ADDRESS;  // set page address == 3
  28   1                      ECON = 0x01;                      // read page 3 into EDATA1-4
  29   1              
  30   1                      if( (EDATA1 == 0xFF)&&(EDATA2 == 0xFF)&&(EDATA3 == 0xFF)&&(EDATA4 == 0xFF) ){  // adc_max not set at all
  31   2                              
  32   2                                      ECON = 0x06;    //erase all
  33   2                      }
  34   1      }
  35          unsigned long ee_read(){
  36   1                      
  37   1                      EADRL = EE_PAGE_ADDRESS;  // set page address == 3
  38   1                      ECON = 0x01;   // read page 3 into EDATA1-4
  39   1                      
  40   1                      return ((EDATA1<<8)|EDATA2);
  41   1      }
  42          void ee_write(unsigned long value){
  43   1              
  44   1              EADRL = EE_PAGE_ADDRESS;  // set page address == 3
  45   1              ECON = 0x01;                      // read page 3 into EDATA1-4
  46   1              
  47   1              EDATA1 = value>>8;
  48   1              EDATA2 = value; 
  49   1              
  50   1              ECON = 0x05;   // erase page (3)
  51   1              ECON = 0x02;   // write page with EDATA1-4
  52   1              
  53   1      }
  54          
  55          
C51 COMPILER V8.09   MAIN                                                                  08/05/2016 11:09:05 PAGE 2   

  56          void ADC_init(){
  57   1              
  58   1              ADC0CON1 = 0x2F;                        // Full Buff, unipolar, 0->2.56V 
  59   1              
  60   1              SF = 0x0D;                                              // ADC freq = 105 Hz            
  61   1              ICON = 0x01;                                    //Enable RTD#1 current source (IEXC1 on pin 11/Ain7)
  62   1      }
  63                  
  64          void ADC_read(){
  65   1              
  66   1              unsigned char timeout = 0;
  67   1              unsigned char timeout_f = 0;
  68   1              ADC0CON2 = 0x4A;                        // Refin+/-, Ain1->Ain2
  69   1              ADCMODE  = 0x22;                        // Single conv, primary ADC....AIN1
  70   1              Delay(1);
  71   1      
  72   1              while(!RDY0 && !timeout_f)              // wait for conversion completion
  73   1              {               
  74   2                              timeout++;
  75   2                              Delay(1);
  76   2                      
  77   2                              if(timeout >= 10)
  78   2                              {
  79   3                                      ADC_init();
  80   3                                      timeout_f = 1;
  81   3                              }
  82   2              }       
  83   1              
  84   1              ADC = ADC0H*0x100+ADC0M;                // ignoring ADC0L, reducing to 16 bit resolution
  85   1                      
  86   1              RDY0 = 0;       
  87   1      }
  88          
  89          
  90          
  91          void test(){
  92   1                                      
  93   1                      float calc=0;
  94   1                      float i =0;
  95   1      
  96   1                      calc = DAC_MIN;
  97   1                      while(1)
  98   1                      {
  99   2                                              
 100   2                         calc = DAC_MIN;                      
 101   2                         DAC_val = (int) calc;
 102   2                         DACH = (DAC_val>>8);
 103   2                         DACL = DAC_val;               
 104   2                     Delay(5000); 
 105   2                                       
 106   2                         calc = DAC_MAX;                      
 107   2                         DAC_val = (int) calc;
 108   2                         DACH = (DAC_val>>8);
 109   2                         DACL = DAC_val;      
 110   2                     Delay(5000); 
 111   2              
 112   2                         while(calc < DAC_MAX)
 113   2                         {
 114   3                                      DAC_val = (int) calc;
 115   3                                      DACH = (DAC_val>>8);
 116   3                                      DACL = DAC_val;
 117   3                                      Delay(2000);
C51 COMPILER V8.09   MAIN                                                                  08/05/2016 11:09:05 PAGE 3   

 118   3                                      
 119   3                                      calc += 200;    
 120   3                         }
 121   2                         calc = DAC_MIN;
 122   2                      }
 123   1      }
 124          
 125          
 126          
 127          void process_relay(){
 128   1              
 129   1              /*      switch(state){
 130   1                                      
 131   1                                      case OFF:
 132   1                                      
 133   1                                              if(resistance <= (THRESHHOLD - HYSTERISIS)) {
 134   1                                                              RELAY = ON;
 135   1                                                              state = ON;
 136   1                                              }
 137   1                                      break;
 138   1                                      
 139   1                                      case ON:
 140   1                                              
 141   1                                              if(resistance >= THRESHHOLD){
 142   1                                                              RELAY = OFF;
 143   1                                                              state = OFF; 
 144   1                                              }
 145   1                                              else {
 146   1                                                              RELAY = ON;
 147   1                                                              state = ON;
 148   1                                              }       
 149   1                                      
 150   1                                      break;
 151   1                                      
 152   1                              }*/     
 153   1      }
 154          
 155          
 156          
 157          void main(){
 158   1               
 159   1                      unsigned long resistance=0;
 160   1                      float calc=0;
 161   1                      
 162   1              
 163   1                      PLLCON = 0x03;      // 1.57 MHz 
 164   1                      DACCON  = 0x03;    // Pin 14 DAC, 12 bit mode, 0-2.5V 
 165   1                      DACH = 0x00;
 166   1                      DACL = 0x00;
 167   1              
 168   1                      RELAY = OFF;
 169   1                      state = OFF;
 170   1                      SET_MAX = 1;                            // P3_0 is input, internal pull up on 
 171   1                      
 172   1                      ee_init();
 173   1                      ADC_init();      
 174   1                      ADC_MAX = ADC_MAX_INIT;
 175   1              //      test();
 176   1               while(1)                // infinite loop
 177   1          {
 178   2            
 179   2                      
C51 COMPILER V8.09   MAIN                                                                  08/05/2016 11:09:05 PAGE 4   

 180   2                              if(!SET_MAX){                           // switch pressed
 181   3                                              
 182   3                                              DACCON = 0x00;  // disabling DAC
 183   3                                              Delay(2);
 184   3                                              ADC_read();
 185   3                                              ee_write(ADC);
 186   3                                              Delay(1);
 187   3                                              DACCON = 0x03; 
 188   3                              }
 189   2                              ADC_read();
 190   2                              resistance = ADC;
 191   2                              resistance = 65535;
 192   2                              if(resistance >= ADC_SENSOR_OPEN){
 193   3                                      resistance = ADC_MIN;           
 194   3                              }
 195   2                              
 196   2                              if(resistance <= ADC_MIN){
 197   3                                      resistance = ADC_MIN;           
 198   3                              }
 199   2                              
 200   2                      
 201   2                               
 202   2                              calc = resistance*(DAC_MAX-DAC_MIN);
 203   2                              calc = calc/(ADC_MAX);
 204   2                              calc = calc+DAC_MIN; 
 205   2                              
 206   2                              
 207   2                              DAC_val = (long) calc;
 208   2                              DACH = (DAC_val>>8);
 209   2                              DACL = DAC_val; 
 210   2                              
 211   2                              ADC_MAX = ee_read();    
 212   2                      
 213   2                      Delay(DELAY); 
 214   2               
 215   2          }
 216   1      }
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    718    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
